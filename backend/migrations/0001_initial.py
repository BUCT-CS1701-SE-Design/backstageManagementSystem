# Generated by Django 2.2.5 on 2020-05-07 03:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Academic',
            fields=[
                ('academicresearchid', models.AutoField(db_column='academicResearchID', primary_key=True, serialize=False)),
                ('academicresearchtime', models.CharField(db_column='academicResearchTime', max_length=45)),
                ('academicresearchtitle', models.CharField(db_column='academicResearchTitle', max_length=45)),
                ('academicresearchlink', models.CharField(db_column='academicResearchLink', max_length=45)),
            ],
            options={
                'db_table': 'academic',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('collectionid', models.AutoField(db_column='CollectionID', primary_key=True, serialize=False)),
                ('collectionname', models.CharField(db_column='collectionName', max_length=45)),
                ('collectionintroduction', models.TextField(blank=True, db_column='collectionIntroduction', null=True)),
                ('collection_age', models.TextField(blank=True, null=True)),
                ('collectionimage', models.TextField(blank=True, db_column='collectionImage', null=True)),
            ],
            options={
                'db_table': 'collection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('educationid', models.AutoField(db_column='educationID', primary_key=True, serialize=False)),
                ('educationname', models.CharField(db_column='educationName', max_length=45)),
                ('educationlink', models.CharField(db_column='educationLink', max_length=45)),
            ],
            options={
                'db_table': 'education',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exhibition',
            fields=[
                ('exhibitionid', models.AutoField(db_column='exhibitionID', primary_key=True, serialize=False)),
                ('exhibitiontime', models.CharField(blank=True, db_column='exhibitionTime', max_length=128, null=True)),
                ('exhibitiontheme', models.CharField(blank=True, db_column='exhibitionTheme', max_length=128, null=True)),
                ('exhibitionintroduction', models.TextField(blank=True, db_column='exhibitionIntroduction', null=True)),
                ('exhibitionlocation', models.TextField(blank=True, db_column='exhibitionLocation', null=True)),
                ('exhibitiontel', models.TextField(blank=True, db_column='exhibitionTel', null=True)),
                ('exhibitionthinglist', models.TextField(blank=True, db_column='exhibitionThingList', null=True)),
                ('exhibition_picture', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'exhibition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Explanation',
            fields=[
                ('explanationid', models.AutoField(db_column='explanationID', primary_key=True, serialize=False)),
                ('explanationname', models.CharField(db_column='explanationName', max_length=45)),
                ('explainerid', models.IntegerField(db_column='explainerID')),
                ('explanationtime', models.IntegerField(db_column='explanationTime')),
                ('explanationlanguage', models.TextField(db_column='explanationLanguage')),
                ('recommendedtime', models.FloatField(db_column='recommendedTime')),
            ],
            options={
                'db_table': 'explanation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Museum',
            fields=[
                ('museumid', models.PositiveIntegerField(db_column='museumID', primary_key=True, serialize=False)),
                ('museumname', models.CharField(db_column='museumName', max_length=45)),
                ('introduction', models.TextField(blank=True, null=True)),
                ('opentime', models.TextField(blank=True, null=True)),
                ('link', models.TextField(blank=True, db_column='Link', null=True)),
                ('location', models.CharField(blank=True, max_length=45, null=True)),
                ('label', models.TextField(blank=True, null=True)),
                ('museum_introduction', models.TextField(blank=True, null=True)),
                ('grade', models.FloatField(blank=True, null=True)),
                ('annual_visits', models.IntegerField(blank=True, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('telephone', models.CharField(blank=True, max_length=45, null=True)),
                ('admission_fee', models.TextField(blank=True, null=True)),
                ('building_time', models.CharField(blank=True, max_length=45, null=True)),
                ('collection_number', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'museum',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Museumnews',
            fields=[
                ('newsid', models.AutoField(db_column='newsID', primary_key=True, serialize=False)),
                ('newstitle', models.CharField(db_column='newsTitle', max_length=45)),
                ('newstime', models.DateField(db_column='newsTime')),
                ('newsmaintext', models.TextField()),
                ('positive_negative', models.CharField(db_column='positive/negative', max_length=45)),
            ],
            options={
                'db_table': 'museumnews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usercomments',
            fields=[
                ('commentid', models.AutoField(db_column='commentID', primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('sentianalysis_environment', models.PositiveIntegerField(db_column='sentiAnalysis_environment')),
                ('sentianalysis_exhibit', models.IntegerField(db_column='sentiAnalysis_exhibit')),
                ('sentianalysis_service', models.IntegerField(db_column='sentiAnalysis_service')),
            ],
            options={
                'db_table': 'usercomments',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Userroles',
            fields=[
                ('userroles', models.CharField(db_column='userRoles', max_length=20, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'userroles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=45)),
                ('nickname', models.CharField(blank=True, max_length=45, null=True)),
                ('telephone', models.CharField(blank=True, max_length=45, null=True)),
                ('idcard', models.CharField(blank=True, db_column='IDcard', max_length=45, null=True)),
                ('password', models.TextField()),
                ('usercreatedate', models.DateTimeField(db_column='userCreateDate')),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Museumrank',
            fields=[
                ('museumid', models.ForeignKey(db_column='museumID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='backend.Museum')),
                ('rank1', models.PositiveIntegerField(unique=True)),
                ('rank2', models.PositiveIntegerField(unique=True)),
            ],
            options={
                'db_table': 'museumrank',
                'managed': False,
            },
        ),
    ]
